# TODO

## CONFIG GENERATOR
* Editeur et générateur de config.
* La mise en place d'un sélecteur de config, choisir le fichier qui sera lancé avec ./webser
* Différencier les tests requests/responses des tests config_files,
    utiliser les mêmes méthode que tests.txt, faire des config_*.ini et construire de multiples configs
    qui peuvent être sélectionnée pour les tests (incluant la version par défaut)

## TESTS EDITOR
* Ajouter un test à tests.txt, éditeur en ligne de commande les tests, ajouter, supprimer, récupérer démarrer les tests en parallèle et comparer les réponses nginx et pyserv, vérifier différence dans nav entre les deux, et caler pyserv sur nginx
* Pour créer un test il faut un serveur nginx fonctionnel pour récupérer la réponse et construire le output expected.
* Quand ajouter un test, se connecter à nginx pour construire réponses dans tests.txt sinon message erreur
* add test
* silent a test by id (or by port ?)
* remove a test

## PYSERV SERVER
* adapt the pyserv response when comparing with nginx and get the same results
* Lire et comparer les testeurs python
* Envoyer les tests et récupérer les réponses nginx, sauvegarder ces réponses dans tests.txt
* Adapter pyserv pour être vert avec responses dans tests.txt
* Lancer webserv pour être au vert avec tests.txt
* Ajouter des options de fichier de config à partir des fichiers nginx
* Ensuite lancer le all et comparer les résultats des tests entre pyserv et webserv

### Advanced PYSERV
* Multiple servers
* Multiplexing, build test with threading multiples client doing multiples requests to nginx and make pyserv make tests work


## TESTER CLIENT
* improve client, work on better request clarity and testing on local pyserv and remote nginx
* compare requests with chrome/firefox
* display the full request for each test

## WEB APP
* Mini Flask app pour éditer les tests, ajouter/sélectionner une config et lancer les tests.
* 3 sections
    * config, select/add/edit/remove configs
    * tests, add/silent/activate (need nginx server working to add)
    * run tests (pyserv, webserv)